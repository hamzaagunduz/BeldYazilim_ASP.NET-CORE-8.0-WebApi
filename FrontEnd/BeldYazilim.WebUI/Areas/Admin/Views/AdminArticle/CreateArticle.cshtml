@model CreateArticleDto

@{
    ViewData["Title"] = "CreateArticle";
    Layout = "~/Areas/Admin/Views/AdminLayout/Index.cshtml";
}


<div class="page-content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-xl-12">
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">Yeni Makale Girişi</h4>
                        <p class="card-subtitle mb-4">Makale ile ilgili temel bilgileri eksiksiz doldurmanız önemlidir. Veri girişlerinden sonra kaydet butonuna tıklayarak işlemi tamamlayabilirsiniz.</p>
                        <form id="form" method="post" enctype="multipart/form-data">

                            <div class="form-group">
                                <label for="exampleInputMainCategory">Kategori Seçiniz</label>

                                <div class="form-group">
                                    <label for="exampleInputMainCategory">Kategori</label>
                                    @Html.DropDownListFor(x => x.MainCategoryId, (List<SelectListItem>)ViewBag.CategoryValues, new { @class = "form-control" })
                                </div>

                            </div>

                            <div class="form-group">
                                <label for="exampleInputModel">Başlık</label>
                                <input type="text" class="form-control" id="exampleInputModel" asp-for="Title" placeholder="Başlığınızı Giriniz">
                            </div>

                            <div class="form-group">
                                <label for="photo">Kapak Fotoğrafı</label>
                                <input type="file" class="form-control" id="photo" name="photo" accept="image/*" />
                            </div>

                            <div class="form-group">
                                <label for="editorid">İçerik</label>
                                <textarea class="form-control" rows="50" id="Content" asp-for="Content" placeholder="İçeriğinizi Giriniz"></textarea>
                            </div>

                            <div class="form-group">
                                <label for="tags">Etiketler</label>
                                <input type="text" class="form-control" id="tags" placeholder="Etiketlerinizi Giriniz">
                            </div>

                            <div class="form-group">
                                <div class="col-md-6">
                                    <div id="selectedTagsContainer"></div>
                                </div>
                            </div>

                            <button type="submit" name="form" class="btn btn-primary waves-effect waves-light">Makaleyi Kaydet</button>
                        </form>

                    </div> <!-- end card-body-->
                </div>

            </div>
            <!-- end card-body-->
        </div>
        <!-- end card -->

    </div>
    <!-- end col -->

</div>


<!-- end page title -->
@section Scripts {
    <script>
        $(document).ready(function () {
            var selectedTags = [];

            // Form submit olayı dinleyicisi
            $("form").submit(function (event) {

                event.preventDefault();


                // Seçilen tagların ID'lerini alın
                var tagIDs = selectedTags.map(function (tag) {
                    return tag.value; // "value" kullanıldı
                });

                console.log("IDler");
                console.log(tagIDs);

                // API'den en son makalenin ID'sini alın
                $.ajax({
                    url: "https://localhost:7298/api/Article/GetLastArticles",
                    type: "GET",
                    dataType: "json",
                    success: function (response) {
                        var lastArticleID = response.articleID;
                        console.log("En son makale ID'si:", lastArticleID);
                        // API'ye göndermek için bir POST isteği yapın
                        $.ajax({
                            url: "https://localhost:7298/api/Tag",
                            type: "POST",
                            contentType: "application/json",
                            data: JSON.stringify({ articleID: 55, tagID: tagIDs }),
                            success: function (response) {
                                console.log("Başarıyla gönderildi:", response);
                                // Formu normal şekilde gönderin
                                $("#form").unbind('submit').submit();
                            },
                            error: function (xhr, textStatus, errorThrown) {
                                console.log("Hata:", errorThrown);
                            }
                        });
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.log("Hata:", errorThrown);
                    }
                });
            });

            // AJAX isteği ile tagları alın
            $.ajax({
                url: "https://localhost:7298/api/Tag",
                type: "GET",
                dataType: "json",
                success: function (data) {
                    console.log("API'den gelen veriler:");
                    console.log(data);

                    // Etiketleri uygun formatta düzenle
                    var availableTags = data.map(function (tag) {
                        return {
                            label: tag.name,
                            value: tag.tagID
                        };
                    });

                    console.log(availableTags);

                    // Input alanına otomatik tamamlama eklemek
                    $("#tags").autocomplete({
                        source: availableTags,
                        select: function (event, ui) {
                            // Seçilen etiketi diziye ekleyin
                            selectedTags.push(ui.item);
                            console.log("Seçilen etiketler:");
                            console.log(selectedTags);

                            // Seçilen etiketleri göstermek için div'e ekleme yapın
                            $("#selectedTagsContainer").empty();
                            selectedTags.forEach(function (tag) {
                                var tagDiv = $("<div>").addClass("selected-tag").text(tag.label); // "label" kullanıldı
                                var removeIcon = $("<span>").addClass("remove-icon").text("x").click(function () {
                                    // Etiketi listeden çıkarın ve div'den kaldırın
                                    var index = selectedTags.indexOf(tag);
                                    if (index > -1) {
                                        selectedTags.splice(index, 1);
                                        tagDiv.remove();
                                    }
                                });
                                tagDiv.append(removeIcon);
                                $("#selectedTagsContainer").append(tagDiv);
                            });
                        }
                    });
                },
                error: function (xhr, textStatus, errorThrown) {
                    console.log("Error: ", errorThrown);
                }
            });
        });

    </script>
}