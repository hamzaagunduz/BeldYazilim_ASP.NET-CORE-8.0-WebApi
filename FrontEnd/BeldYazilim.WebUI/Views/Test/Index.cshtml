@* @{
    ViewData["Title"] = "Index";
    Layout = "~/Views/UILayout/Index.cshtml";

}
 *@
@* @{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/AdminLayout/Index.cshtml";
    int count = 0;
}


<div class="container">
    <h3>jQuery UI Autocomplete with Bootstrap Styling</h3>
    <form id="tagForm" autocomplete="off">
        <div class="form-group" style="width:300px;">
            <label for="tags">Tags</label>
            <input type="text" class="form-control" id="tags">
        </div>
        <button type="submit" class="btn btn-primary">Submit</button> <!-- Submit Butonu -->
    </form>
</div>
<div id="autocompleteContainer"></div>
 *@



<script>
    var selectedTags = [];
    position: { collision: "flip" }

    // AJAX isteği ile tagları alın
    $.ajax({
        url: "https://localhost:7298/api/Tag",
        type: "GET",
        dataType: "json",
        success: function (data) {
            console.log("API'den gelen veriler:");
            console.log(data);

            var availableTags = data.map(function (tag) {
                return tag.name;
            });

            console.log(availableTags);

            $("#tags").autocomplete({
                position: { my: "right top", at: "right bottom" }

                source: availableTags,
                select: function (event, ui) {
                    selectedTags.push(ui.item);
                    console.log("Seçilen etiketler:");
                    console.log(selectedTags);

                    $("#selectedTagsContainer").empty();
                    selectedTags.forEach(function (tag) {
                        var tagDiv = $("<div>").addClass("selected-tag").text(tag.name);
                        var removeIcon = $("<span>").addClass("remove-icon").text("x").click(function () {
                            var index = selectedTags.indexOf(tag);
                            if (index > -1) {
                                selectedTags.splice(index, 1);
                                tagDiv.remove();
                            }
                        });
                        tagDiv.append(removeIcon);
                        $("#selectedTagsContainer").append(tagDiv);
                    });
                }
            }).autocomplete("widget").appendTo(".form-group");
        },
        error: function (xhr, textStatus, errorThrown) {
            console.log("Error: ", errorThrown);
        }
    });



        // Form submit olayı dinleyicisi
    $("#form").submit(function (event) {
        event.preventDefault();

        // Seçilen tag'lerin ID'lerini alın
        var tagIDs = selectedTags.map(function (tag) {
            return tag.value;
        });
        console.log("IDler");
        console.log(tagIDs);

        // API'ye tag'leri göndermek için bir POST isteği yapın
        $.ajax({
            url: "https://localhost:7298/api/Tag",
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify({ articleID: 57, tagID: tagIDs }),
            success: function (response) {
                console.log("Tagler başarıyla gönderildi:", response);
                // Tag'ler başarıyla gönderildiğinde, makale oluşturma işlemi için bir POST isteği yapın
                $.ajax({
                    url: "https://localhost:7298/api/Article",
                    type: "POST",
                    data: $(this).serialize(), // Form verilerini alıyoruz
                    success: function (response) {
                        console.log("Makale başarıyla oluşturuldu:", response);
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.log("Makale oluşturulurken bir hata oluştu:", errorThrown);
                    }
                });
            },
            error: function (xhr, textStatus, errorThrown) {
                console.log("Tagler gönderilirken bir hata oluştu:", errorThrown);
            }
        });
    });
    });;

 // </script>



@* $(document).ready(function () {
    var selectedTags = {};

    // AJAX isteği ile tagları alın
    $.ajax({
        url: "https://localhost:7298/api/Tag",
        type: "GET",
        dataType: "json",
        success: function (data) {
            console.log("API'den gelen veriler:");
            console.log(data);

            // Etiketleri uygun formatta düzenle
            var availableTags = data.map(function (tag) {
                return {
                    label: tag.name,
                    value: tag.tagID
                };
            });

            console.log(availableTags);

            // Input alanına otomatik tamamlama eklemek
            $("#tags").autocomplete({
                source: availableTags,
                select: function (event, ui) {
                    // Seçilen etiketi diziye ekleyin
                    if (!(ui.item.value in selectedTags)) {
                        selectedTags[ui.item.value] = ui.item;
                    }
                    console.log("Seçilen etiketler:");
                    console.log(selectedTags);

                    // Seçilen etiketleri göstermek için div'e ekleme yapın
                    updateSelectedTags();
                }
            });
        },
        error: function (xhr, textStatus, errorThrown) {
            console.log("Error: ", errorThrown);
        }
    });

    // Seçilen etiketleri güncelleyen fonksiyon
    function updateSelectedTags() {
        $("#selectedTagsContainer").empty();
        for (var tagID in selectedTags) {
            var tag = selectedTags[tagID];
            var tagDiv = $("<div>
    ").addClass("selected-tag").text(tag.label); // "label" kullanıldı
    var tagIDDiv = $("<div>
        ").addClass("tag-id").text(tag.value); // ID değeri div'e eklendi
        var removeIcon = $("<span>
            ").addClass("remove-icon").text("x").click(function () {
            // Etiketi listeden çıkarın ve div'den kaldırın
            var tagID = $(this).siblings(".tag-id").text();
            delete selectedTags[tagID];
            $(this).parent().remove();
            // Silinen etiketin ID'sini tagIDsContainer'dan da kaldır
            $("#tagIDsContainer").find(".tag-id").filter(function () {
            return $(this).text() === tagID;
            }).remove();
            });
            tagDiv.append(removeIcon);
            $("#selectedTagsContainer").append(tagDiv);

            // ID div'lerini de ekleyin
            $("#selectedTagsContainer").append(tagIDDiv);
            }
            }
            });
 *@